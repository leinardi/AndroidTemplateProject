/*
 * Copyright 2024 Roberto Leinardi.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     https://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

package com.leinardi.forlago.feature.@placeholderlowercase@.ui

import androidx.lifecycle.SavedStateHandle
import com.leinardi.forlago.library.ui.base.BaseViewModel
import com.leinardi.forlago.library.navigation.api.navigator.ForlagoNavigator
import com.leinardi.forlago.library.navigation.api.destination.@placeholderlowercase@.@PlaceholderName@Destination
import dagger.hilt.android.lifecycle.HiltViewModel
import javax.inject.Inject

@HiltViewModel
class @PlaceholderName@ViewModel @Inject constructor(
    private val forlagoNavigator: ForlagoNavigator,
    private val savedStateHandle: SavedStateHandle,
) : BaseViewModel<@PlaceholderName@Contract.Event, @PlaceholderName@Contract.State, @PlaceholderName@Contract.Effect>() {
    private val text: String = @PlaceholderName@Destination.Arguments.getText(savedStateHandle)
    override fun provideInitialState() = @PlaceholderName@Contract.State(text)

    override fun handleEvent(event: @PlaceholderName@Contract.Event) {
        when (event) {
            is @PlaceholderName@Contract.Event.OnBackButtonClicked -> forlagoNavigator.navigateUp()
            @PlaceholderName@Contract.Event.OnShowSnackbarButtonClicked -> sendEffect { @PlaceholderName@Contract.Effect.ShowSnackbar("Lorem ipsum dolor sit amet...") }
        }
    }

}
