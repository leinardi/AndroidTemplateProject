import io.gitlab.arturbosch.detekt.Detekt

/*
 * Copyright 2022 Roberto Leinardi.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     https://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

plugins {
    id 'forlago.android-library-conventions'
    id 'com.google.dagger.hilt.android'
    alias(libs.plugins.kotlinx.serialization)
    alias(libs.plugins.apollo)
}

android {
    namespace 'com.leinardi.forlago.library.network'
    resourcePrefix 'network_'
    defaultConfig {
        consumerProguardFiles "$projectDir/proguard-network-consumer-rules.pro"
    }
    kotlinOptions {
        freeCompilerArgs += '-opt-in=kotlinx.serialization.ExperimentalSerializationApi'
    }
}

apollo {
    packageName = "com.leinardi.forlago.library.network.graphql"
    generateApolloMetadata = true
}

dependencies {
    implementation projects.modules.libraryAndroid
    implementation projects.modules.libraryFeature
    implementation projects.modules.libraryI18n
    implementation projects.modules.libraryNavigation
    implementation projects.modules.libraryPreferences
    api libs.coroutines.android
    api libs.coroutines.core
    api libs.kotlinx.serialization
    api libs.retrofit
    api libs.apollo
    implementation libs.apollo.cache
    implementation libs.apollo.cache.sqlite
    implementation libs.hilt.android
    implementation libs.okhttp3.logging.interceptor
    implementation libs.retrofit.kotlinx.serialization
    implementation libs.timber
    kapt libs.hilt.compiler

    kaptTest libs.hilt.android.compiler
    kaptAndroidTest libs.hilt.android.compiler
    testImplementation(libs.apollo.testing.support)
}

// Workaround for https://github.com/detekt/detekt/issues/4743
tasks.withType(Detekt).configureEach {
    exclude("com/leinardi/forlago/library/network/graphql/**/*.kt")
}

tasks.register("refreshGraphQlSchema", Exec) {
    def endpoint = 'https://apollo-fullstack-tutorial.herokuapp.com/graphql'
    def schemaPath = 'modules/library-network/src/main/graphql/schema.graphqls'
    workingDir rootDir
    commandLine './gradlew', 'downloadApolloSchema', "--endpoint=$endpoint", "--schema=$schemaPath"
}
